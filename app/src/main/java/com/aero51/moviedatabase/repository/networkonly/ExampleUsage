
public class Top_Rated_Results_Repository {


    //creating livedata for PagedList  and networkState
    private LiveData<PagedList<Top_Rated_Result>> topRatedResultsPagedList;
    private LiveData<NetworkState> networkState;


 //getting our data source factory
        TopRatedResultDataSourceFactory topRatedResultDataSourceFactory = new TopRatedResultDataSourceFactory();

        networkState = Transformations.switchMap(topRatedResultDataSourceFactory.getNetworkStatus(),
                new Function<TopRatedResultDataSource, LiveData<NetworkState>>() {
                    @Override
                    public LiveData<NetworkState> apply(TopRatedResultDataSource dataSource) {
                        return dataSource.getNetworkState();
                    }
                });


                 //Getting PagedList config
                        PagedList.Config pagedListConfig =
                                (new PagedList.Config.Builder())
                                        .setEnablePlaceholders(false)
                                        .setPrefetchDistance(60)
                                        .setPageSize(TopRatedResultDataSource.PAGE_SIZE).build();
                        //Building the paged list
                        topRatedResultsPagedList = (new LivePagedListBuilder(
                                topRatedResultDataSourceFactory, pagedListConfig))
                                .setBoundaryCallback(boundaryCallback)
                                .build();



                                }

           // this is here because i wanted to keep a record how to use retrofit sync call
        private List<Top_Rated_Result> fetchTopRatedMoviesSync(Call<Top_Rated_Movies_Page> call) {
               List<Top_Rated_Result> list_of_results = new ArrayList<>();
               try {
                   Response<Top_Rated_Movies_Page> response = call.execute();
                   if (!response.isSuccessful()) {
                       Log.d("moviedatabaselog", "Response unsuccesful: " + response.code());
                       // networkState.postValue(new NetworkState(NetworkState.Status.FAILED, response.message()));
                       return null;
                   }
                   // networkState.postValue(NetworkState.LOADED);
                   Top_Rated_Movies_Page mTopRatedMovies = response.body();
                   list_of_results = mTopRatedMovies.getResults_list();
               } catch (IOException e) {
                   e.printStackTrace();
                   Log.d("moviedatabaselog", "call failure  IOException : " + e.getMessage());
                   // networkState.postValue(new NetworkState(NetworkState.Status.FAILED, e.getMessage()));
               }
               return list_of_results;

           }
